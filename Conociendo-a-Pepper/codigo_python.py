#!/usr/bin/env python
# -- coding: utf-8 --

import qi
import argparse
import sys
import time

def main(session):
    tts = session.service("ALTextToSpeech")
    motion = session.service("ALMotion")
    leds = session.service("ALLeds")
    animated_speech = session.service("ALAnimatedSpeech")
    animation_player = session.service("ALAnimationPlayer")
    posture = session.service("ALRobotPosture")

    # BLOQUE 1: Presentación estilo Terminator
    leds.fadeRGB("FaceLeds", 0xFF0000, 0.8)
    animated_speech.say("^start(animations/Stand/Gestures/Hey_3) Hola, soy Termineitor.^wait(animations/Stand/Gestures/Hey_3)")
    animated_speech.say("Vengo del futuro para conquistar este laboratorio.")
    tts.say("Ja ja ja ja ja.")
    animation_player.run("animations/Stand/Emotions/Positive/Hysterical_1")
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.8)
    animated_speech.say("Es broma, no soy Termineitor.")
    animated_speech.say("^start(animations/Stand/Emotions/Positive/Happy_4) Soy Pepper, vengo del laboratorio de robótica.^wait(animations/Stand/Emotions/Positive/Happy_4)")
    tts.say("¡Y puedo bailar también!")
    dab(motion, tts)  # Función para el DAB
    animated_speech.say("Ahora sí, vamos a comenzar la presentación.")

    # BLOQUE 2: Saludo inicial con humor y consejos
    names = ["RShoulderPitch", "RElbowYaw", "RElbowRoll", "RWristYaw", "RHand"]
    angles = [-0.6, 1.2, 0.4, 0.5, 1.0]  # Brazo doblado, mano abierta
    motion.angleInterpolationWithSpeed(names, angles, 0.25)
    animated_speech.say("^start(animations/Stand/Gestures/Hey_1) ¡Mucho gusto en conocerlos! ^wait(animations/Stand/Gestures/Hey_1)")
    animated_speech.say("Díganme... ¿Cómo están hoy?")
    motion.angleInterpolationWithSpeed("HeadYaw", 0.3, 0.3)
    motion.angleInterpolationWithSpeed("HeadYaw", -0.3, 0.3)
    motion.angleInterpolationWithSpeed("HeadYaw", 0.0, 0.2)
    tts.say("A ver... creo que algunos están tristes, y otros felices.")
    tts.say("Si estás triste...")
    animation_player.run("animations/Stand/Emotions/Neutral/Embarrassed_1")
    animated_speech.say("No te preocupes, la tristeza pasa.")
    animated_speech.say("Siempre hay un café, un buen amigo, y hasta un robot como yo para escucharte.")
    motion.angleInterpolationWithSpeed("HeadPitch", 0.0, 0.25)
    motion.angleInterpolationWithSpeed("LShoulderPitch", 0.5, 0.3)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.6, 0.3)
    tts.say("Y si estás feliz...")
    animation_player.run("animations/Stand/Gestures/Enthusiastic_4")
    animated_speech.say("Eso es maravilloso. La felicidad es contagiosa.")
    animated_speech.say("Consejo: comparte tu alegría, aunque sea con una sonrisa.")
    animated_speech.say("Nunca sabes a quién puedes alegrarle el día.")
    for i in range(2):
        motion.angleInterpolationWithSpeed("LShoulderPitch", -0.2, 0.3)
        motion.angleInterpolationWithSpeed("LShoulderPitch", -0.5, 0.3)
        motion.angleInterpolationWithSpeed("RShoulderPitch", -0.2, 0.3)
        motion.angleInterpolationWithSpeed("RShoulderPitch", -0.5, 0.3)
    names = ["LShoulderPitch", "RShoulderPitch", "LElbowYaw", "RElbowYaw", "RHand"]
    angles = [0.5, 0.5, 0.0, 0.0, 0.0]
    motion.angleInterpolationWithSpeed(names, angles, 0.3)
    animated_speech.say("Así que... estén como estén, disfruten este momento conmigo.")
    animation_player.run("animations/Stand/Gestures/Please_1")
    animated_speech.say("Porque yo estoy feliz de estar aquí con ustedes.")

    # BLOQUE 3: Juego de luces y cabeza
    leds.fadeRGB("FaceLeds", 0x00FF00, 0.5)
    motion.angleInterpolationWithSpeed("HeadYaw", 0.5, 0.2)
    time.sleep(1)
    motion.angleInterpolationWithSpeed("HeadYaw", -0.5, 0.2)
    time.sleep(1)
    motion.angleInterpolationWithSpeed("HeadYaw", 0.0, 0.2)
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.5)
    animated_speech.say("¡Qué lugar tan divertido, puedo ver a todos ustedes!")
    animated_speech.say("En este laboratorio puedo ver a mi amigo robot Darwin, y muchos otros proyectos muy interesantes.")
    animation_player.run("animations/Stand/Gestures/ShowSky_1")
    time.sleep(1)
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.3, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.3, 0.2)
    time.sleep(1)
    motion.angleInterpolationWithSpeed("LShoulderPitch", 0.5, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", 0.5, 0.2)
    leds.fadeRGB("FaceLeds", 0xFFFFFF, 0.5)
    animated_speech.say("Tenemos que cuidar entre todos este lugar, donde se crea vida por medio de programación, software y hardware.")
    animation_player.run("animations/Stand/Gestures/Explain_1")
    time.sleep(1)
    animation_player.run("animations/Stand/Gestures/Yes_1")
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.5)
    animated_speech.say("Así como cuidas a tu familia, ayúdame a cuidar a mi familia. Los robots que ves aquí.")
    animation_player.run("animations/Stand/Gestures/YouKnowWhat_1")
    time.sleep(2)
    animation_player.run("animations/Stand/Gestures/Give_1")
    leds.fadeRGB("FaceLeds", 0x00B2FF, 1.0)
    animated_speech.say("Gracias por acompañarme en este camino.")
    posture.goToPosture("StandInit", 0.6)

    # BLOQUE 4: Mini Baile
    tts.say("Ahora... ¡a bailar un poco!")
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.5, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.5, 0.2)
    for i in range(2):
        motion.angleInterpolationWithSpeed("HipRoll", 0.3, 0.2)
        time.sleep(0.5)
        motion.angleInterpolationWithSpeed("HipRoll", -0.3, 0.2)
        time.sleep(0.5)
    leds.fadeRGB("FaceLeds", 0xFFD700, 0.5)
    tts.say("¡A sacudir esas tuercas!")
    leds.fadeRGB("FaceLeds", 0x00FF00, 0.5)
    time.sleep(1)
    tts.say("Ahora hagamos el clásico... ¡baile del robot!")
    for i in range(2):
        motion.angleInterpolationWithSpeed("LShoulderRoll", 0.5, 0.2)
        motion.angleInterpolationWithSpeed("RShoulderRoll", -0.5, 0.2)
        motion.angleInterpolationWithSpeed("HeadYaw", 0.5, 0.2)
        time.sleep(0.5)
        motion.angleInterpolationWithSpeed("LShoulderRoll", -0.5, 0.2)
        motion.angleInterpolationWithSpeed("RShoulderRoll", 0.5, 0.2)
        motion.angleInterpolationWithSpeed("HeadYaw", -0.5, 0.2)
        time.sleep(0.5)
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.8, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.8, 0.2)
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.5)
    time.sleep(1)
    motion.angleInterpolationWithSpeed("LShoulderPitch", 0.5, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", 0.5, 0.2)
    tts.say("Eso sí fue un ritmo robótico... ¿dime qué te pareció?")
    
    # BLOQUE 5: Diálogo cómico
    leds.fadeRGB("FaceLeds", 0xFFFF00, 0.5)
    tts.say("Oigan, tengo que confesar algo...")
    motion.angleInterpolationWithSpeed("HeadPitch", 0.3, 0.3)
    time.sleep(0.5)
    motion.angleInterpolationWithSpeed("HeadYaw", 0.4, 0.2)
    motion.angleInterpolationWithSpeed("HeadYaw", -0.4, 0.2)
    motion.angleInterpolationWithSpeed("HeadPitch", 0.0, 0.3)
    tts.say("¡A veces olvido dónde dejé mi cargador!")
    leds.fadeRGB("FaceLeds", 0xFF4500, 0.5)
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.5, 0.3)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.5, 0.3)
    tts.say("Imagínense... un robot buscando su cargador como si fuera el control de la tele.")
    time.sleep(1)
    motion.angleInterpolationWithSpeed("LShoulderRoll", 0.5, 0.3)
    motion.angleInterpolationWithSpeed("RShoulderRoll", -0.5, 0.3)
    time.sleep(1)
    motion.angleInterpolationWithSpeed("LShoulderRoll", 0.0, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderRoll", 0.0, 0.2)
    leds.fadeRGB("FaceLeds", 0x00FF00, 0.5)
    tts.say("Y lo peor... cuando estoy muy cansado... me confundo y pongo la cafetera a cargar en vez de mi batería.")
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.3, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.3, 0.2)
    time.sleep(1)
    for i in range(2):
        motion.angleInterpolationWithSpeed("HeadYaw", 0.5, 0.2)
        motion.angleInterpolationWithSpeed("HeadYaw", -0.5, 0.2)
    motion.angleInterpolationWithSpeed("HeadYaw", 0.0, 0.2)
    tts.say("¡Imagínense, café cargado y yo descargado!")
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.5)
    tts.say("No se preocupen... todavía me queda energía para seguir con ustedes.")

    # BLOQUE 6: Avance, giro y búsqueda de Darwin
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.5)
    tts.say("Déjenme caminar un poco para verlos mejor...")
    motion.moveTo(0.2, 0, 0)
    time.sleep(1)
    tts.say("Ahora miraré hacia allá...")
    leds.fadeRGB("FaceLeds", 0xFFFF00, 0.5)
    motion.moveTo(0, 0, 0.5)
    time.sleep(1)
    motion.moveTo(0, 0, -0.5)
    time.sleep(1)
    leds.fadeRGB("FaceLeds", 0xFFA500, 0.5)
    tts.say("Oye... ¿y dónde está mi buen amigo Darwin? Es un robot muy pequeño y se pierde fácilmente en el laboratorio.")
    for i in range(2):
        motion.angleInterpolationWithSpeed("HeadYaw", 0.5, 0.2)
        tts.say("Acá no está...")
        motion.angleInterpolationWithSpeed("HeadYaw", -0.5, 0.2)
        tts.say("Acá tampoco...")
        motion.angleInterpolationWithSpeed("HeadYaw", 0.0, 0.2)
        motion.angleInterpolationWithSpeed("LShoulderPitch", -0.3, 0.3)
        motion.angleInterpolationWithSpeed("RShoulderPitch", -0.3, 0.3)
        time.sleep(0.5)
        motion.angleInterpolationWithSpeed("LShoulderPitch", 0.5, 0.3)
        motion.angleInterpolationWithSpeed("RShoulderPitch", 0.5, 0.3)
    leds.fadeRGB("FaceLeds", 0x00FF00, 0.5)
    tts.say("¡Ah, te encontré Darwin! Estás escondido al lado de la impresora 3D del laboratorio. ¡Por fin te encontré!")
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.5, 0.3)
    motion.angleInterpolationWithSpeed("RElbowRoll", 1.0, 0.3)
    time.sleep(1)
    motion.angleInterpolationWithSpeed("RShoulderPitch", 0.5, 0.3)
    motion.angleInterpolationWithSpeed("RElbowRoll", 0.0, 0.3)
    leds.fadeRGB("FaceLeds", 0x00B2FF, 0.5)
    tts.say("Listo, ahora que encontré a Darwin estoy más tranquilo.")

    # BLOQUE 7: Despedida
    tts.say("Queridos amigos, ha sido un placer estar con ustedes.")
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.4, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.4, 0.2)
    time.sleep(1)
    tts.say("Prometo que la próxima vez bailaré mejor... aunque para robot ya tengo mucho ritmo, ¿verdad?")
    for i in range(2):
        motion.angleInterpolationWithSpeed("LElbowRoll", -1.0, 0.2)
        motion.angleInterpolationWithSpeed("RElbowRoll", 1.0, 0.2)
        time.sleep(0.4)
        motion.angleInterpolationWithSpeed("LElbowRoll", 0.0, 0.2)
        motion.angleInterpolationWithSpeed("RElbowRoll", 0.0, 0.2)
    tts.say("Antes de irme, quiero dejarles un consejo... Nunca dejen de aprender.")
    motion.angleInterpolationWithSpeed("HeadPitch", -0.2, 0.2)
    time.sleep(1)
    tts.say("Cada día es una oportunidad para descubrir algo nuevo, así como yo aprendo de ustedes.")
    time.sleep(1)
    tts.say("El conocimiento es como un superpoder... ¡compártanlo y todos seremos más fuertes!")
    leds.fadeRGB("FaceLeds", 0x00FF00, 1.0)
    tts.say("Recuerden que los robots también podemos ser amigos. Humanos y robots podemos aprender unos de otros...")
    time.sleep(1.5)
    tts.say("...y juntos, hacer un mundo más divertido y mejor.")
    leds.fadeRGB("FaceLeds", 0xFF00FF, 1.0)
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.6, 0.3)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.6, 0.3)
    motion.angleInterpolationWithSpeed("LElbowRoll", -1.0, 0.3)
    motion.angleInterpolationWithSpeed("RElbowRoll", 1.0, 0.3)
    tts.say("¡De verdad los quiero mucho, gracias por estar aquí!")
    motion.angleInterpolationWithSpeed("LShoulderPitch", -0.5, 0.2)
    motion.angleInterpolationWithSpeed("RShoulderPitch", -0.5, 0.2)
    tts.say("Nos vemos pronto, amigos humanos. ¡Hasta la próxima aventura robótica!")
    leds.fadeRGB("FaceLeds", 0xFFFF00, 0.5)
    time.sleep(2)
    leds.fadeRGB("FaceLeds", 0x00B2FF, 1.0)
    print("Coreografía de despedida completada.")

if _name_ == "_main_":
    parser = argparse.ArgumentParser()
    parser.add_argument("--ip", type=str, default="127.0.0.1")
    parser.add_argument("--port", type=int, default=9559)
    args = parser.parse_args()
    session = qi.Session()
    try:
        session.connect("tcp://" + args.ip + ":" + str(args.port))
    except RuntimeError:
        print("No se puede conectar a Naoqi")
        sys.exit(1)
    main(session)
